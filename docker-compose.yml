version: '3.8'

services:
  # PostgreSQL 数据库 | PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: flightfinder-postgres
    environment:
      POSTGRES_DB: flightfinder
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - flightfinder-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot 后端 | Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flightfinder-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/flightfinder
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - flightfinder-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/flight-finder/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React 前端 | React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flightfinder-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - flightfinder-network

volumes:
  postgres-data:

networks:
  flightfinder-network:
    driver: bridge
